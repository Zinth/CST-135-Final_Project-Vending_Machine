package vendingMachine.classes.gui;

/**
 * Author Rob Wade
 *
 */

import javafx.application.Application;
import javafx.geometry.HPos;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.FontPosture;
import javafx.scene.text.FontWeight;
import javafx.stage.Stage;
import vendingMachine.classes.Dispenser;
import vendingMachine.classes.products.Product;

import java.util.ArrayList;

public class CategoryPane extends Application {
    BorderPane categoryMainPane = new BorderPane();
    GridPane mainCategoryPane = new GridPane();
    ListView<String> basketList = new ListView<>();
    Label basketPrice = new Label("Total: ");
    Dispenser mainDispenser = new Dispenser();

    String borderedItems = "-fx-border-color: blue;\n"
            + "-fx-border-insets: 6;\n"
            + "-fx-border-width: 2;\n"
            + "-fx-border-style: solid;\n";
    Font fontBold = Font.font("Times-New-Roman", FontWeight.BOLD, FontPosture.REGULAR, 12);
    ArrayList<Product> productsInSelectedCategory = new ArrayList();


    public void start(Stage primaryStage) {

        //Right side of box.
        VBox rightSide = new VBox(20);
        rightSide.setPadding(new Insets(20, 20, 20, 20));
        rightSide.setPrefWidth(200);
        rightSide.setPrefHeight(400);

        //Left side of box.
        VBox leftSide = new VBox(20);
        leftSide.setPadding(new Insets(20, 20, 20, 20));
        leftSide.setPrefWidth(200);
        leftSide.setPrefWidth(400);

        //Create GridPane
        createCategoryPane();

        categoryMainPane.setLeft(leftSide);
        categoryMainPane.setRight(rightSide);
        leftSide.getChildren().add(mainCategoryPane);


        Scene scene = new Scene(categoryMainPane);
        primaryStage.setTitle("Category Selection");
        primaryStage.setScene(scene);
        primaryStage.show();

    }

    /**
     * createCategoryPane()
     */
    public void createCategoryPane() {

        mainCategoryPane.getChildren().clear();

        mainCategoryPane.setAlignment(Pos.CENTER);
        mainCategoryPane.setPadding(new Insets(15, 15, 15, 15));
        mainCategoryPane.setHgap(10);
        mainCategoryPane.setVgap(10);

        String categories[] = {"Drink", "Chips", "Candy", "Gum"};

        int row = 0;
        int col = 0;


        /**
         * buildCategoryPane()
         *
         */
        class buildCategory extends GridPane {
            buildCategory(String categoryName) {
                //This will be the internal GridPane.
                GridPane pane = new GridPane();
                pane.setAlignment(Pos.CENTER);
                pane.setPadding(new Insets(15, 15, 15, 15));
                pane.setHgap(10);
                pane.setVgap(10);
                getChildren().add(pane);

                //Create interactive button.
                Button categoryButton = new Button("Buy " + categoryName);
                categoryButton.setOnAction(value -> {
                    viewCategoryItems(categoryName);
                });

                Image categoryImage = new Image("res/images/");

                //Add items
                pane.add(new ImageView(categoryImage), 0, 0);
                pane.add(categoryButton, 0, 1);
                pane.setHalignment(categoryButton, HPos.CENTER);

            }

            /**
             * viewCategoryItems()
             *
             * @param categoryName
             */
            public void viewCategoryItems(String categoryName) {

                mainCategoryPane.getChildren().clear();

                //Get the items in the category
                ArrayList<Product> allProduct = mainDispenser.getProductList();

                //Setup the array list.
                ArrayList<Product> prodsINThisCategory = new ArrayList();

                for (int i = 0; i < allProduct.size(); i++) {
                    String currentProductName = allProduct.get(i).getProductName();
                    int lookingForId = 0;

                    //Set up ID numbers to Drinks = 1, Chips = 2, Candy = 3, Gum = 4.
                    switch (categoryName) {
                        case "Drinks":
                            lookingForId = 1;
                            break;
                        case "Chips":
                            lookingForId = 2;
                            break;
                        case "Candy":
                            lookingForId = 3;
                            break;
                        case "Gum":
                            lookingForId = 4;
                            break;
                    }
                }
            }


            /**
             * buildCategoryItems()
             */
            public void buildCategoryItems() {
                mainCategoryPane.getChildren().clear();

                mainCategoryPane.setAlignment(Pos.CENTER);
                mainCategoryPane.setPadding(new Insets(15, 15, 15, 15));
                mainCategoryPane.setHgap(10);
                mainCategoryPane.setVgap(10);

                Button backButton = new Button("Back To Previous Menu");
                backButton.setOnAction(value -> {
                    createCategoryPane();
                });


            }

            /**
             * buildCategoryItems()
             */
            class buildEachCategoryItem extends GridPane {
                buildEachCategoryItem(Product product) {
                    GridPane pane = new GridPane();
                    pane.setAlignment(Pos.CENTER);
                    pane.setPadding(new Insets(15, 15, 15, 15));
                    pane.setHgap(10);
                    pane.setVgap(10);

                    getChildren().add(pane);

                    Label name = new Label(product.getProductName());
                    Label price = new Label(String.valueOf(product.getPrice()));
                    Label description = new Label(product.getDescription());
                    Label qty = new Label("Quantity Available: " + String.valueOf(product.getQuantity()));
                    Button addToBasketButton = new Button("Add To Basket");

                    pane.add(name, 0, 0);
                    pane.add(price, 1, 0);
                    pane.add(description, 0, 1, 2, 1);
                    pane.add(qty, 0, 2, 2, 1);
                    pane.add(addToBasketButton, 0, 3, 2, 1);

                    pane.setHalignment(price, HPos.RIGHT);
                    pane.setHalignment(addToBasketButton, HPos.CENTER);
                    name.setFont(fontBold);
                    pane.setStyle(borderedItems);


                }
            }


            public void main(String[] args) {
                Application.launch(args);
            }
        }
    }
}
